{"version":3,"sources":["webpack:///./node_modules/core-js/modules/es.regexp.to-string.js","webpack:///./node_modules/@babel/runtime/helpers/esm/typeof.js","webpack:///./src/plugins/serial/base-serial.js"],"names":["redefine","anObject","fails","flags","TO_STRING","RegExpPrototype","RegExp","prototype","nativeToString","NOT_GENERIC","call","source","INCORRECT_NAME","name","R","this","p","String","rf","f","undefined","unsafe","_typeof","obj","Symbol","iterator","constructor","signalMap","dtr","rts","brk","cts","dsr","dcd","BaseSerial","requestRequired","mute","baud","Number","window","localStorage","currentBaudRate","lastBaud","encoding","devices","currentDevice","connected","implementation","serial","DEBUG","Vue","$serial","Promise","all","map","device","isDevice","value","isDevices","filter","i","console","log","update","baudRate","setBaud","val","sig","trans","Object","keys","forEach","signals","isOpen","Error","sigs","_transSignal","set","get","resolve","reject","read","buff","err","toString","write","_currentDevice","open","emit","pause","close","resume","push","find","d","cb","connect","opts","disconnect","setSignals","getSignals","size","readBuff","slice","Math","min","length","Infinity","paused","message","writeBuff","Buffer","from","EventEmitter"],"mappings":"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","file":"js/serial-base.7ecf16e9.js","sourcesContent":["'use strict';\nvar redefine = require('../internals/redefine');\nvar anObject = require('../internals/an-object');\nvar fails = require('../internals/fails');\nvar flags = require('../internals/regexp-flags');\n\nvar TO_STRING = 'toString';\nvar RegExpPrototype = RegExp.prototype;\nvar nativeToString = RegExpPrototype[TO_STRING];\n\nvar NOT_GENERIC = fails(function () { return nativeToString.call({ source: 'a', flags: 'b' }) != '/a/b'; });\n// FF44- RegExp#toString has a wrong name\nvar INCORRECT_NAME = nativeToString.name != TO_STRING;\n\n// `RegExp.prototype.toString` method\n// https://tc39.es/ecma262/#sec-regexp.prototype.tostring\nif (NOT_GENERIC || INCORRECT_NAME) {\n  redefine(RegExp.prototype, TO_STRING, function toString() {\n    var R = anObject(this);\n    var p = String(R.source);\n    var rf = R.flags;\n    var f = String(rf === undefined && R instanceof RegExp && !('flags' in RegExpPrototype) ? flags.call(R) : rf);\n    return '/' + p + '/' + f;\n  }, { unsafe: true });\n}\n","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}","/* eslint-disable no-unused-vars */\n/* eslint-disable class-methods-use-this */\nimport EventEmitter from 'events';\n\n/*\nInterface should emit the following:\nthis.emit('data', buffer)\nthis.emit('message', string) // should be a string version of buffer\n// message should not be emitted whilst this.mute === true\nthis.emit('connected', value)\nthis.emit('disconnected', value)\nthis.emit('deviceNamePrompt', value) // prompts the user to input a readable device name\n*/\n\nconst signalMap = {\n  dtr: 'dataTerminalReady',\n  rts: 'requestToSend',\n  brk: 'break',\n  cts: 'clearToSend',\n  dsr: 'dataSetReady',\n  dcd: 'dataCarrierDetect',\n};\n\nclass BaseSerial extends EventEmitter {\n  constructor() {\n    super();\n    this.requestRequired = false;\n    this.mute = false;\n    this.baud = Number(window.localStorage.currentBaudRate) || 115200;\n    this.lastBaud = 115200;\n    this.encoding = 'ascii';\n    this.devices = [];\n    this.currentDevice = null;\n    this.connected = false;\n    this.implementation = 'basic';\n    this.serial = null;\n    this.DEBUG = true;\n  }\n\n  install(Vue) {\n    // eslint-disable-next-line no-param-reassign\n    Vue.$serial = this;\n    // eslint-disable-next-line no-param-reassign\n    Vue.prototype.$serial = this;\n  }\n\n  async requestDevice() { return {}; }\n\n  async listDevices() {\n    const isDevices = await Promise.all(this.devices.map((device) => this.isDevice(device.value)));\n    return this.devices.filter((device, i) => isDevices[i]);\n  }\n\n  async isDevice(value) { return true; }\n\n  async setCurrentDevice(value) { this.currentDevice = value; }\n\n  async setBaud(baud) {\n    // eslint-disable-next-line no-console\n    if (this.DEBUG) console.log('setting speed', baud);\n    if (this.serial) await this.serial.update({ baudRate: baud });\n    this.baud = baud;\n    window.localStorage.currentBaudRate = baud;\n    return baud;\n  }\n\n  async resetBaud() {\n    this.setBaud(this.lastBaud);\n  }\n\n  async setMute(val) { this.mute = val; }\n\n  _transSignal(sig) {\n    let trans = {};\n    if (typeof sig === 'object') {\n      trans = { ...sig };\n    }\n    if (sig === 'on' || sig === true) {\n      trans = {\n        dtr: true,\n        rts: true,\n      };\n    }\n    if (sig === 'off' || sig === false) {\n      trans = {\n        dtr: false,\n        rts: false,\n      };\n    }\n    Object.keys(signalMap).forEach((i) => {\n      if (typeof trans[i] === 'boolean') trans[signalMap[i]] = trans[i];\n      if (typeof trans[signalMap[i]] === 'boolean') trans[i] = trans[signalMap[i]];\n    });\n    return trans;\n  }\n\n  async setSignals(signals) {\n    if (!this.serial?.isOpen) throw new Error('Cannot write to closed port.');\n    // eslint-disable-next-line no-console\n    if (this.DEBUG) console.log('signaling', signals);\n    const sigs = this._transSignal(signals);\n    return this.serial.set(sigs);\n  }\n\n  async getSignals() {\n    if (!this.serial?.isOpen) throw new Error('Cannot read closed port.');\n    const signals = await this.serial.get();\n    return this._transSignal(signals);\n  }\n\n  readBuff() {\n    return new Promise((resolve, reject) => this.serial?.read((buff, err) => {\n      if (err) reject(err);\n      else resolve();\n    }));\n  }\n\n  writeBuff(buff) {\n    // eslint-disable-next-line no-console\n    if (this.DEBUG) console.log('write', buff.toString('hex'));\n    return new Promise((resolve, reject) => this.serial.write(buff, (err) => {\n      if (err) reject(err);\n      else resolve();\n    }));\n  }\n\n  connect() {\n    if (!this.serial) throw new Error('Cannot connect to un-initiated device.');\n    if (!this._currentDevice || this.serial.isOpen) {\n      // eslint-disable-next-line no-console\n      if (this.DEBUG) console.log('skipping connect');\n      return Promise.resolve();\n    }\n    return new Promise((resolve, reject) => this.serial.open((err) => {\n      if (err) return reject(err);\n      this.connected = true;\n      this.emit('connected', this.currentDevice);\n      return resolve();\n    }));\n  }\n\n  async disconnect() {\n    if (!this._currentDevice || !this.serial?.isOpen) return;\n    this.serial.pause();\n    await this.serial.close();\n    this.serial.resume();\n    this.connected = false;\n    this.emit('disconnect', this.currentDevice);\n    this.emit('close');\n    // eslint-disable-next-line no-console\n    if (this.DEBUG) console.log('disconnected');\n  }\n\n  async setDeviceName(value, name) {\n    if (await this.isDevice(value)) this.devices.push({ value, name });\n  }\n\n  async getDeviceName(value) {\n    return (this.devices.find((d) => d.value === value) || { name: '' }).name;\n  }\n\n  // node-serialport properties\n  get isOpen() { return this.connected; }\n\n  get path() { return this.implementation; }\n\n  get baudRate() { return this.baud; }\n\n  async open(cb = () => {}) {\n    try {\n      await this.connect();\n    } catch (err) {\n      cb?.(err);\n      return;\n    }\n    cb?.();\n  }\n\n  async update(opts = {}, cb = () => {}) {\n    try {\n      if (opts.baudRate) {\n        await this.setBaud(opts.baudRate);\n      }\n    } catch (err) {\n      cb?.(err);\n      return;\n    }\n    cb?.();\n  }\n\n  async close(cb = () => {}) {\n    try {\n      await this.disconnect();\n    } catch (err) {\n      cb?.(err);\n      return;\n    }\n    cb?.();\n  }\n\n  async set(opts = {}, cb = () => {}) {\n    try {\n      await this.setSignals(opts);\n    } catch (err) {\n      cb?.(err);\n      return;\n    }\n    cb?.();\n  }\n\n  async get(cb = () => {}) {\n    let sigs = {};\n    try {\n      sigs = await this.getSignals();\n    } catch (err) {\n      cb?.(err, null);\n      return;\n    }\n    cb?.(null, sigs);\n  }\n\n  async read(size) {\n    const buff = await this.readBuff();\n    return buff && buff.slice(0, Math.min(buff.length, size || Infinity));\n  }\n\n  drain(cb = () => {}) { cb?.(); }\n\n  flush(cb = () => {}) { cb?.(); }\n\n  pause() {\n    this.serial?.paused?.();\n  }\n\n  resume() {\n    this.serial?.resume?.();\n  }\n\n  async write(message, encoding = null, cb = () => {}) {\n    if (typeof encoding === 'function') {\n      // eslint-disable-next-line no-param-reassign\n      cb = encoding;\n      // eslint-disable-next-line no-param-reassign\n      encoding = null;\n    }\n    if (this.mute && typeof message === 'string') return;\n    try {\n      await this.writeBuff(typeof message === 'string' ? Buffer.from(message, encoding || this.encoding) : message);\n    } catch (err) {\n      cb?.(err);\n      return;\n    }\n    cb?.();\n  }\n}\n\nexport default BaseSerial;\n"],"sourceRoot":""}